= gdor-indexer
[![Dependency Status](https://gemnasium.com/sul-dlss/gdor-indexer.svg)](https://gemnasium.com/sul-dlss/gdor-indexer)

Code to harvest DOR druids via dor-fetcher, mods from PURL, and use it to index items into the Searchworks index.

Relationship used for dor-fetcher:  "is_member_of_collection_ww121ss5000"

== State of branches

There are three branches:
  before-chris-mods - the code reverted back to the state of the master before the modifications by Chris Beer in 2014, with the removal of the code that merges the DOR and MARC record for SearchWorks.
  master - the code re-written by Chris Beer in 2014 to streamline the indexing of one druid at a time and including the removal of the code that merges the DOR and MARC record for SearchWorks.
  master-b4-redesign - the code prior to the redesign of the SearchWorks UI Summer of 2014.

  No more modifications to this code are expected because StanfordSync will be replacing this code in 2015.

===Configure environments

Copy the example solr.yml file from the spec/config directory into the config directory and change as required.  This will indicate which solr instance the collection will index into.
  cp spec/config/solr.yml config

Copy the example dor-fetcher-client.yml file from the spec/config directory into the config directory and change as required.  This will indicate which dor-fetcher-service the indexer will pull objects from.
  cp spec/config/dor-fetcher-client.yml config

== Running the tests

Once installed, you should run the tests to make sure everything is set up properly
  rake ci

== Indexing a collection

Create a collections folder in the config directory

  cd /path/to/gdor-indexer/config
  mkdir collections

Copy the example yml file (spec/config/walters_integration_spec.yml) into the newly created collections folder and edit as needed.

  cp spec/config/walters_integration_spec.yml config/collections/my_collection.yml

Run the indexer script as follows:

  cd /path/to/gdor-indexer
  ./bin/indexer -c my_collection

